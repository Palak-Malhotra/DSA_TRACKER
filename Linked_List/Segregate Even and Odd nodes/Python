def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        odd_head, even_head = head, head.next
        cursor = even_head
        while odd_head.next and even_head.next:
            odd_head.next = odd_head.next.next
            odd_head = odd_head.next
            even_head.next = even_head.next.next
            even_head = even_head.next
        odd_head.next = cursor
        return head
